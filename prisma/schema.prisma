// Prisma schema for Quiz App migrated from MongoDB to PostgreSQL
// Run: npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  pseudo    String        @unique
  createdAt DateTime      @default(now())
  sessions  GameSession[]
}

model GameSession {
  id              String            @id @default(cuid())
  user            User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  startedAt       DateTime          @default(now())
  completedAt     DateTime?
  questionSessions QuestionSession[]

  @@index([userId])
  @@index([completedAt])
}

model QuestionSession {
  id        String      @id @default(cuid())
  gameSession   GameSession @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)
  gameSessionId String
  stepName  String
  order     Int
  startedAt DateTime    @default(now()) // Quand la question est présentée à l'utilisateur
  answeredAt DateTime?  // Quand l'utilisateur répond correctement
  usedHints Json        @default("[]") // array of numbers (indexes)
  attempts  Attempt[]   // Toutes les tentatives pour cette question
  
  @@unique([gameSessionId, stepName])
  @@index([gameSessionId, order])
}

model Attempt {
  id                String          @id @default(cuid())
  questionSession   QuestionSession @relation(fields: [questionSessionId], references: [id], onDelete: Cascade)
  questionSessionId String
  submittedAt       DateTime        @default(now()) // Quand la réponse est soumise
  answer            String          // La réponse soumise
  isCorrect         Boolean         @default(false)

  @@index([questionSessionId])
}
